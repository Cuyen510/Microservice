  server:
    port: 9000

  security:
    jwt:
      secret: asdbsakjdbsjkacbacnlasknckjscnkjscbascscxsacasacadasd

  kafka:
    topic:
      validateUser: validate-user-request
      validateUserResponse: validate-user-response
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gateway-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer



  spring:
    application:
      name: api-gateway
    cloud:
      gateway:
        routes:
          - id: productservice
            uri: http://localhost:9001
            predicates:
              - Path=/api/v1/products/**, /api/v1/categories/**

          - id: user-public-routes
            uri: http://localhost:9002
            predicates:
              - Path=/api/v1/users/register, /api/v1/users/login, /api/v1/roles/**

          - id: user-protected-routes
            uri: http://localhost:9002
            predicates:
              - Path=/api/v1/users/{id}, /api/v1/users
            filters:
              - AuthFilter

          - id: order-protected-routes
            uri: http://localhost:9003
            predicates:
              - Path=/api/v1/orders/**, /api/v1/cart/**
            filters:
              - AuthFilter

        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        globalcors:
          corsConfigurations:
            '[/**]':
              allowedOrigins: "*"
              allowedMethods: "*"
              allowedHeaders: "*"

